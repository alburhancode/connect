@model Recruitwise.Models.Quiz.IndividualsBySectionViewModel
@using Recruitwise.Classes.Helpers;
@{
    var sections = SessionHelper.LoggedInUser.Sections.OrderBy(p => p.Substring(0)).ToList();
    var maxMarksText = "";
    var marks = "";
    if (Model.IndividualBasics != null && Model.IndividualBasics.Count > 0 && Model.IndividualBasics[0].MaxMarks > 0)
    {
        maxMarksText = "out of ";
        marks = Model.IndividualBasics[0].MaxMarks.ToString();
    }
}
<div id="individual-events-by-section">
    <div style="float:right;">
        <table>
            <tr>
                <td style="color: slategray;">
                    <b>Section</b>
                </td>
            </tr>
            <tr>
                <td>
                    @Html.DropDownList("Section", new SelectList(sections), new { @class = "form-dropdown-my-assessments-smaller js_sections", @id = "dropdown-section-events" })
                </td>
            </tr>
        </table>
    </div>

    <div style="float:left; padding-right: 50px;">
        <table>
            <tr>
                <td style="color: slategray;">
                    <b>Quiz</b>
                </td>
            </tr>
            <tr>
                <td>
                    @Html.DropDownList("Quiz", Model.EventNames, new { @class = "form-dropdown-my-assessments-medium js_quizes", @id = "dropdown-section-events" })
                </td>
            </tr>
        </table>
    </div>

    <table id="details_event">
        <tr>
            <th>
                RollNumber
            </th>
            <th>
                Name
            </th>
            <th align="center">
                Marks obtained @maxMarksText<b id="max_marks">@marks</b>
            </th>
            @*<th></th>*@
        </tr>

        @foreach (var item in Model.IndividualBasics)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.RollNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td align="center">
                    @if (item.MarksObtained == null)
                    {
                        @Html.EditorFor(modelItem => item.MarksObtained, new { htmlAttributes = new { @class = "textbox-my-assessments-quizmarks-null", placeholder = "??", @individualid = item.IndividualId } })
                    }
                    else
                    {
                        @Html.EditorFor(modelItem => item.MarksObtained, new { htmlAttributes = new { @class = "textbox-my-assessments-quizmarks", placeholder = "??", @individualid = item.IndividualId } })
                    }
                </td>
                @*<td>
                        <button class="button-my-assessments-table" id='showGame' url='@Url.Action("ViewSelectedIndividualEvents", new { id = item.IndividualId, name = item.Name, rollNumber = item.RollNumber })'>View</button>
                        <div id='gameModal' class='modal fade in' style="padding:75px; max-height:90%;">
                            <div class="modal-assessments-view">
                                <button id="close-event-first-modal" style="float:right; font-size: 18px; background-color:red;color:yellow; font-weight:bold;">x</button>
                                <div id='gameContainer' style="padding: 20px;">
                                </div>
                            </div>
                        </div>
                    </td>*@
            </tr>
        }

    </table>
    <input type="button" id="btn_confirm_fake" value="Verify all marks" class="button-apply-smaller" />
</div>


